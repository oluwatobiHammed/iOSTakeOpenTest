//
//  Page2ViewController.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 10/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class Page2ViewController: BaseViewController {
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var nextButton: UIButton!
    @IBOutlet weak var headerTitleLabel: UILabel!
    @IBOutlet weak var buttonButtomConstrain: NSLayoutConstraint!
    var firstSection = [Sections]()
    private var arrayOfCells: [SelectorTableViewCell] = []
    private var cell: SelectorTableViewCell!
    private var isValidated =  Bool()
    var requestData = FormBuilder.Builder()
    override var presentRequestData: Any?{
        didSet{
            requestData = (presentRequestData as? FormBuilder.Builder)!
        }
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        addScrollViewListener(constraint: buttonButtomConstrain)
        if let data = DataLoader().userData?.pages?[1].sections {
            firstSection = data
            headerTitleLabel.text = data[0].label
        }
        tableView.dataSource = self
        tableView.separatorStyle = .none
        tableView.reloadData()
        nextButton.layer.cornerRadius = 7
        nextButton.alpha = 0.7
        nextButton.isEnabled = false
        view.addTapGesture {
            self.view.endEditing(true)
            self.validate()
            self.expandScrollView()
        }
        tableView.addTapGesture {
            self.view.endEditing(true)
            self.validate()
            self.expandScrollView()
        }
        
        
        // Do any additional setup after loading the view.
    }
    
    
    
    func validate() {
        for i in 0..<arrayOfCells.count {
            if arrayOfCells[i].data.isMandatory == true && arrayOfCells[i].textField.hasText != true {
                if arrayOfCells[i].data.label ==  "Do you have a yard?" {
                    isValidated = false
                    arrayOfCells[i].errorLabel.alpha = 1
                    self.arrayOfCells[i].errorLabel.textWithAnimation(text: "This field is required" , duration: 0.5)
                }
                
            }else {
                isValidated = true
                arrayOfCells[i].errorLabel.alpha = 0
            }
            
            if arrayOfCells[i].data.label ==  "Do you have a yard?" {
                if isValidated == true {
                    nextButton.alpha = 1
                    nextButton.isEnabled = true
                }else {
                    nextButton.alpha = 0.7
                    nextButton.isEnabled = false
                }
            }
            
            
        }
        
    }
    
    func parameterBuilder () {
        for i in 0..<arrayOfCells.count {
            
            if arrayOfCells[i].data.label == "Do you have a yard?" {
                if let questionOne = arrayOfCells[i].textField.text{
                    requestData.questionOne = questionOne
                }
                
            }
            if arrayOfCells[i].data.label == "Is it fenced? Also indicate the type" {
                if let questiontwo = arrayOfCells[i].textField.text{
                    requestData.questiontwo = questiontwo
                }
                
            }
            
        }
        
        let _ = StoryBoardsID.boardMain.navigationProvider.requestNavigation(to: ViewControllerID.Page3ViewController.rawValue, from: self, requestData: requestData)
    }
    
    @IBAction func nextButtonPressed(_ sender: Any) {
        parameterBuilder()
    }
}


extension Page2ViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return firstSection.count
    }
    
    
    func tableView(_ tableView: UITableView, didEndEditingRowAt indexPath: IndexPath?) {
        arrayOfCells[(indexPath?.row)!].textField.text = cell.textField.text
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return firstSection[section].elements!.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "selectorelement", for: indexPath) as? SelectorTableViewCell
        cell?.data = firstSection[indexPath.section].elements?[indexPath.row]
        cell?.selectionStyle = .none
        arrayOfCells += [cell!]
        cell?.addTapGesture {
            self.view.endEditing(true)
            self.validate()
            //self.expandScrollView()
            
        }
        return cell!
    }
    
}



