//
//  TextFieldTableViewCell.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 09/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class TextFieldTableViewCell: UITableViewCell {
    
    @IBOutlet weak var textField: DesignableTextField!
    @IBOutlet weak var headerLabel: UILabel!
    @IBOutlet weak var errorLabel: UILabel!
    @IBOutlet weak var profileImage: UIImageView!
    @IBOutlet weak var pickView: DesignableTextField!
    @IBOutlet weak var pickerErrorLabel: UILabel!
    private var datePicker: UIDatePicker?
    var pickerView: UIPickerView?
    var validate = false
    var validateOther = false
    var nameValidator = false
    var dobValidator = false
    var checkDob = false
    var type = ["Yes","No"]
    let MINIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: 0, to: Date())!
    
    // Age of 100.
    let MAXIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: -100, to: Date())!
    
    var data: Elements! {
        didSet {
            profileImage.alpha = 0
            pickView?.alpha = 0
            textField.alpha = 1
            headerLabel.alpha = 1
            setUpTextField()
            pickerView = UIPickerView()
            pickerView?.delegate = self
            pickerView?.dataSource = self
            if let elements = data {
                textField.placeholder  = elements.label
                if elements.type == "embeddedphoto" {
                    if let image = elements.file {
                        textField.alpha = 0
                        headerLabel.alpha = 0
                        errorLabel.alpha = 0
                        pickView?.alpha = 0
                        //pickerErrorLabel.alpha = 0
                        profileImage.alpha = 1
                        profileImage.downloadImage(url: image)
                        profileImage.layer.cornerRadius = 30
                    }
                }
                
                
                
                
                if let name = elements.label {
                    
                    if name == "Do you have a yard?" {
                                      textField.inputView = pickerView
                                      textField.textAlignment = .center
                                      textField.placeholder = "Select Answer"
                                  }else {
                                      //textField.valueType = .fullName
                                      textField.keyboardType = .default
                                      textField.placeholder =  "   " + "\(name)"
                                  }
                                  if elements.isMandatory == true {
                                      headerLabel.text =   "\(name) *"
                                  }else{
                                      headerLabel.text =   "\(name)"
                                  }
                    
                    headerLabel.text =   "Enter Your \(name) *"
                    if name == "Email address" {
                        
                        textField.keyboardType = .emailAddress
                        setTextField(image: #imageLiteral(resourceName: "email"))
                    }
                    
                    
                    if name == "Your fullname" {
                        setTextField(image: #imageLiteral(resourceName: "user"))
                        textField.keyboardType = .default
                        textField.valueType = .fullName
                        
                    }
                    if name == "Phone Number" {
                        textField.valueType = .phoneNumber
                        textField.keyboardType = .numberPad
                        textField.maxLength = 11
                        setTextField(image: #imageLiteral(resourceName: "user"))
                        
                    }
                    
                    if name == "Date of Birth" {
                        pickView.placeholder  = elements.label
                        datePicker = UIDatePicker()
                        datePicker?.datePickerMode = .date
                        datePicker?.addTarget(self, action: #selector(dateChanged(datePicker:)), for: .valueChanged)
                        pickView.inputView = datePicker
                        textField.alpha = 0
                        headerLabel.alpha = 1
                        errorLabel.alpha = 0
                        pickerErrorLabel.alpha = 1
                        profileImage.alpha = 0
                        pickView.alpha = 1
                        pickView.leftImage = #imageLiteral(resourceName: "calenda")
                        pickView.leftPadding = 10
                        
                        if elements.isMandatory == true {
                            
                            headerLabel.text =   "Select Your \(name) *"
                        }else{
                            headerLabel.text =   "Select Your \(name)"
                        }
                    }else {
                        textField.alpha = 1
                        if elements.isMandatory == true {
                            headerLabel.text =   "Enter Your \(name) *"
                        }else{
                            headerLabel.text =   "Enter Your \(name)"
                        }
                    }
                    
                    
                }
                
                
                
            }
            
        }
    }
    
    
    
    
    
    
    
}

extension TextFieldTableViewCell {
    @objc func dateChanged(datePicker: UIDatePicker) {
        let isValidAge = validateAge(birthDate: datePicker.date)
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "MM/dd/yyyy"
        if  data.label == "Date of Birth" {
            pickView.alpha = 1
            textField.alpha = 0
            pickView.text = dateFormatter.string(from: datePicker.date)
            self.errorLabel.alpha = 0
            pickerErrorLabel.alpha = 1
            self.dobValidator = isValidAge ? true : false
            let error = isValidAge ? "" : "Invalid Age"
            self.pickerErrorLabel.textWithAnimation(text: error , duration: 0.5)
        }
        
        
        
        
    }
    
    func validateAge(birthDate: Date) -> Bool {
        var isValid: Bool = true;
        
        if birthDate < MAXIMUM_AGE || birthDate > MINIMUM_AGE {
            isValid = false;
        }
        
        return isValid;
    }
    
    func checkDOB() -> Bool {
        if textField.text?.count == 0 {
            return false
        }
        return true
    }
    
    func numberCheck() -> Bool {
        if textField.text?.count == 11 {
            return true
        }
        return false
    }
    func setUpTextField()  {
        textField.bind { (text) in
            let isValid = self.isValidEmail(text)
            let valid = self.textField.hasText
            let phoneValid = self.numberCheck()
            self.errorLabel.alpha = 1
            if self.data.label == "Email address" {
                self.validate = isValid && valid ? true : false
                
            }
            if self.data.label == "Phone Number" {
                self.validateOther = phoneValid && valid ? true : false
            }
            
            if self.data.label == "Your fullname" {
                self.nameValidator = valid ? true : false
                let error  = valid ? "" : "This field is required"
                self.errorLabel.textWithAnimation(text: error , duration: 0.5)
            }
            
            
        }
    }
    
    private func setTextField (image: UIImage) {
        textField.leftImage = image
        
        
    }
    
    func isValidEmail(_ email: String) -> Bool {
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        
        let emailPred = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
        return emailPred.evaluate(with: email)
    }
    
    
    
}

extension TextFieldTableViewCell: UIPickerViewDelegate, UIPickerViewDataSource {
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        
        return type.count
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        
        return type[row]
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        
        textField.text = type[row]
    }
    
}
