//
//  Page2ViewController.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 10/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class Page2ViewController: UIViewController {

    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var nextButton: UIButton!
    var firstSection = [Sections]()
    override func viewDidLoad() {
        super.viewDidLoad()
        if let data = DataLoader().userData?.pages?[1].sections {
            firstSection = data
        }
        
        tableView.separatorStyle = .none
         tableView.reloadData()
         nextButton.isEnabled = false
         let tapGesture = UITapGestureRecognizer(target: self, action: #selector(viewTapped(gestureRegonizer:)))
         
         tableView.addGestureRecognizer(tapGesture)
        // Do any additional setup after loading the view.
    }
    @objc func viewTapped(gestureRegonizer: UITapGestureRecognizer) {
        tableView.endEditing(true)
//        if isValidated == false {
//            if let message = validate() {
//                istoValidate(error: message)
//            }
//        }else {
//            nextButton.isEnabled = true
//        }
    }

    @IBAction func nextButtonPressed(_ sender: Any) {
    }
}


extension Page2ViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
           return firstSection.count
       }
    
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
            
            return firstSection[section].label
            
        }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return firstSection[section].elements!.count
    }
  
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
          let cell = tableView.dequeueReusableCell(withIdentifier: "selectorelement", for: indexPath) as? SelectorTableViewCell
              //cell?.data = firstSection[indexPath.section].elements?[indexPath.row]
              cell?.selectionStyle = .none
              
              //arrayOfCells += [cell!]
              
              return cell!
    }
    

}
