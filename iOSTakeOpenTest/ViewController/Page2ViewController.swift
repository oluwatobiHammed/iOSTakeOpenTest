//
//  Page2ViewController.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 10/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class Page2ViewController: UIViewController {

    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var nextButton: UIButton!
    @IBOutlet weak var headerTitleLabel: UILabel!
    var firstSection = [Sections]()
    private var arrayOfCells: [SelectorTableViewCell] = []
    private var cell: SelectorTableViewCell!
     private var isValidated =  Bool()
    override func viewDidLoad() {
        super.viewDidLoad()
        
        if let data = DataLoader().userData?.pages?[1].sections {
            firstSection = data
            headerTitleLabel.text = data[0].label
        }
        tableView.dataSource = self
        tableView.separatorStyle = .none
         tableView.reloadData()
         nextButton.isEnabled = false
        nextButton.layer.cornerRadius = 7
         let tapGesture = UITapGestureRecognizer(target: self, action: #selector(viewTapped(gestureRegonizer:)))
         
         tableView.addGestureRecognizer(tapGesture)
        // Do any additional setup after loading the view.
    }
    @objc func viewTapped(gestureRegonizer: UITapGestureRecognizer) {
        tableView.endEditing(true)
        if isValidated == false {
            if let message = validate() {
                istoValidate(error: message)
            }
        }else {
            nextButton.isEnabled = true
        }
    }
    
    func istoValidate(error message: String) {
           for i in 0..<arrayOfCells.count {
               
               
               if  arrayOfCells[i].data.isMandatory == true {
                   if arrayOfCells[i].textField.hasText != true {
                       arrayOfCells[i].errorLabel.alpha = 1
                       arrayOfCells[i].errorLabel.text = message
                   }else {
                       //arrayOfCells[i].errorLabel.alpha = 0
                   }
               }
               
           }
       }
       
       func validate() -> String? {
           for i in 0..<arrayOfCells.count {
               if  arrayOfCells[i].data.isMandatory == true {
                   if arrayOfCells[i].textField.hasText != true {
                       isValidated = false
                       return "This field is required"
                   }else {
                       isValidated = true
                       arrayOfCells[i].errorLabel.alpha = 0
                   }
               }else {
                   isValidated = true
               }
               
           }
           return nil
       }

    @IBAction func nextButtonPressed(_ sender: Any) {
    }
}


extension Page2ViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
           return firstSection.count
       }
    
    
    func tableView(_ tableView: UITableView, didEndEditingRowAt indexPath: IndexPath?) {
          arrayOfCells[(indexPath?.row)!].textField.text = cell.textField.text
      }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       return firstSection[section].elements!.count
    }
  
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
          let cell = tableView.dequeueReusableCell(withIdentifier: "selectorelement", for: indexPath) as? SelectorTableViewCell
              cell?.data = firstSection[indexPath.section].elements?[indexPath.row]
              cell?.selectionStyle = .none
              arrayOfCells += [cell!]
              
              return cell!
    }
    

}
