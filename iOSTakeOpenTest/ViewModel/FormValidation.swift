//
//  FormValidation.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 18/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import Foundation
class FormValidation {
    private let maxChar = 15
    private let minChar = 3
    private static func isValidEmail(_ email: String) -> String? {
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        
        let emailPred = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
        if !emailPred.evaluate(with: email) {
            return "\(email) is not a valid email"
        }
        return nil
    }
    
    private static func numberCheck(number: String?) -> String? {
        if number?.count != 11 {
            return "Must contain exactly 11 charaters"
        }
        return nil
    }
    
    
    
    private static func filledRequiredFields(input: String?) -> String? {
            if input == nil || input?.trimmingCharacters(in: .whitespacesAndNewlines) == "" {
                return "Please This field is required"
            }
        return nil
    }
    
    static func validateNameField(input: String?, name: String?) -> String? {
           
           if let error = filledRequiredFields(input: input) { return error }
           
           if let fullName = name {
               if let error = validateFullName(name: fullName) { return error }
           }
           
           return nil
       }
    
    static func validatePhoneField(input: String?, number: String?) -> String? {
              
              if let error = filledRequiredFields(input: input) { return error }
              
               if let number = number {
                        if let error = numberCheck(number: number) { return error }
                    }
              
              return nil
          }
    
    static func validateEmailField(input: String?, emails: String?) -> String? {
        
        if let error = filledRequiredFields(input: input) { return error }
        
        if let emails = emails {
            if let error = isValidEmail(emails) { return error }
        }
        
      
        
        return nil
    }
    
    
    static func validateDOBField(input: String?, dob: Date?) -> String? {
        
        if let error = filledRequiredFields(input: input) { return error }
        
        if let dob = dob {
            if let error = validateAge(birthDate: dob) { return error }
        }
        
      
        
        return nil
    }
    
   private static func validateAge(birthDate: Date) -> String? {
        let MINIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: 0, to: Date())!
         
         // Age of 100.
         let MAXIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: -100, to: Date())!
          
          
          if birthDate < MAXIMUM_AGE || birthDate > MINIMUM_AGE {
              return "Invalid Age"
          }
          
          return nil
      }
    
    
    private static func validateFullName(name: String?) -> String? {
        let minChar = 3
        if let name = name {
        if name.count < minChar {
                  return "Full name must be at least \(minChar) characters."
              }
        }
        
        return nil
    }
}
