//
//  TextFieldTableViewCell.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 09/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class TextFieldTableViewCell: UITableViewCell {
    
    @IBOutlet weak var textField: DesignableTextField!
    @IBOutlet weak var headerLabel: UILabel!
    @IBOutlet weak var errorLabel: UILabel!
    @IBOutlet weak var profileImage: UIImageView!
    private var datePicker: UIDatePicker?
    var validate = false
    var validateOther = false
    var nameValidator = false
    var dobValidator = false
    var checkDob = false
    let MINIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: -3, to: Date())!;
    
    // Age of 100.
    let MAXIMUM_AGE: Date = Calendar.current.date(byAdding: .year, value: -100, to: Date())!;
    
    var data: Elements! {
        didSet {
            datePicker = UIDatePicker()
            datePicker?.datePickerMode = .date
            datePicker?.addTarget(self, action: #selector(dateChanged(datePicker:)), for: .valueChanged)
            setUpTextField()
            self.textField.delegate = self
            
            if let elements = data {
                if let image = elements.file {
                    textField.alpha = 0
                    headerLabel.alpha = 0
                    profileImage.alpha = 1
                    profileImage.downloadImage(url: image)
                    profileImage.layer.cornerRadius = 30
                }
                textField.placeholder  = elements.label
                if let name = elements.label {
                    
                    headerLabel.text =   "Enter Your \(name) *"
                    if name == "Email address" {
                        setTextField(image: #imageLiteral(resourceName: "email"), keyboard: .emailAddress, characterCount: nil)
                    }
                    
                    if name == "Phone Number" {
                        setTextField(image: #imageLiteral(resourceName: "user"), keyboard: .numberPad, characterCount: 11)
                    }
                    if name == "Your fullname" {
                        setTextField(image: #imageLiteral(resourceName: "user"), keyboard: .default, characterCount: 11)
                        textField.valueType = .fullName
                        
                    }
                    
                    if name == "Date of Birth" {
                        if elements.isMandatory == true {
                            setTextField(image: #imageLiteral(resourceName: "calenda"), keyboard: .default, characterCount: nil)
                            textField.leftPadding = 10
                            textField.inputView = datePicker
                            headerLabel.text =   "Select Your \(name) *"
                        }else{
                            headerLabel.text =   "Select Your \(name)"
                        }
                    }else {
                        if elements.isMandatory == true {
                            headerLabel.text =   "Enter Your \(name) *"
                        }else{
                            headerLabel.text =   "Enter Your \(name)"
                        }
                    }
                    
                    
                }
                
                
                
            }
            
        }
    }
    
    
    
    @objc func dateChanged(datePicker: UIDatePicker) {
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "MM/dd/yyyy"
        textField.text = dateFormatter.string(from: datePicker.date)
        
        let isValidAge = validateAge(birthDate: datePicker.date)
        if self.data.label == "Date of Birth" {
            self.dobValidator = isValidAge ? true : false
            self.errorLabel.text = isValidAge ? "" : "Invalid Age"
        }
        
    }
    
    
    
}

extension TextFieldTableViewCell: UITextFieldDelegate {
    
    func validateAge(birthDate: Date) -> Bool {
        var isValid: Bool = true;
        
        if birthDate < MAXIMUM_AGE || birthDate > MINIMUM_AGE {
            isValid = false;
        }
        
        return isValid;
    }
    
    func checkDOB() -> Bool {
        if textField.text?.count == 0 {
            return false
        }
        return true
    }
    
    func numberCheck() -> Bool {
        if textField.text?.count == 11 {
            return true
        }
        return false
    }
    func setUpTextField()  {
        textField.bind { (text) in
            let isValid = self.isValidEmail(text)
            let valid = self.textField.hasText
            let phoneValid = self.numberCheck()
            self.errorLabel.alpha = 1
            if self.data.label == "Email address" {
                self.validate = isValid && valid ? true : false
                
            }
            if self.data.label == "Phone Number" {
                self.validateOther = phoneValid && valid ? true : false
            }
            
            if self.data.label == "Your fullname" {
                self.nameValidator = valid ? true : false
                self.errorLabel.text = valid ? "" : "This field is required"
            }
            
            
        }
    }
    
    private func setTextField (image: UIImage, keyboard: UIKeyboardType, characterCount: Int?) {
        textField.leftImage = image
        if let count = characterCount {
            textField.maxLength = count
        }
        textField.keyboardType = keyboard
    }
    
    func isValidEmail(_ email: String) -> Bool {
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        
        let emailPred = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
        return emailPred.evaluate(with: email)
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        
        // Verify all the conditions
        if let sdcTextField = textField as? DesignableTextField {
            return sdcTextField.verifyFields(shouldChangeCharactersIn: range, replacementString: string)
        }
        return false
    }
    
}
