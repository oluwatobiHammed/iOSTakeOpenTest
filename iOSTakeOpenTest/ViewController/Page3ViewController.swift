//
//  Page3ViewController.swift
//  iOSTakeOpenTest
//
//  Created by Oladipupo Oluwatobi on 10/06/2020.
//  Copyright Â© 2020 Oladipupo Oluwatobi. All rights reserved.
//

import UIKit

class Page3ViewController: BaseViewController {
    
    @IBOutlet weak var headerTitleLable: UILabel!
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var submitButton: UIButton!
    private var arrayOfCells: [ThirdPageTableViewCell] = []
    private var cell: ThirdPageTableViewCell!
    private var isValidated =  Bool()
    var firstSection = [Sections]()
    
    var requestData = FormBuilder.Builder()
    override var presentRequestData: Any?{
        didSet{
            requestData = (presentRequestData as? FormBuilder.Builder)!
        }
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        
        
        view.addTapGesture {
            self.view.endEditing(true)
            self.validate()
        }
        
        tableView.addTapGesture {
            self.view.endEditing(true)
            self.validate()
        }
        
        if let data = DataLoader().userData?.pages?[2].sections {
            firstSection = data
            headerTitleLable.text = data[0].label
        }
        
        tableView.dataSource = self
        tableView.separatorStyle = .none
        tableView.reloadData()
        submitButton.isEnabled = false
        submitButton.alpha = 0.7
        submitButton.layer.cornerRadius = 7
    }
    
    
    func validate() {
        for i in 0..<arrayOfCells.count {
            if arrayOfCells[i].data.isMandatory == true && arrayOfCells[i].textField.hasText != true {
                if arrayOfCells[i].data.label ==  "Please provide the name of a personal reference" {
                    isValidated = false
                    arrayOfCells[i].errorLabel.alpha = 1
                    self.arrayOfCells[i].errorLabel.textWithAnimation(text: "This field is required" , duration: 0.5)
                }
            }else {
                isValidated = true
                arrayOfCells[i].errorLabel.alpha = 0
            }
            
            if arrayOfCells[i].data.label ==  "Please provide the name of a personal reference" {
                if isValidated == true {
                    submitButton.alpha = 1
                    submitButton.isEnabled = true
                }else {
                    submitButton.alpha = 0.7
                    submitButton.isEnabled = false
                }
            }
            
        }
        
    }
    func parameterBuilder () {
        for i in 0..<arrayOfCells.count {
            
            if arrayOfCells[i].data.label == "Please provide your veterinarian's name" {
                if let questionOne = arrayOfCells[i].textField.text{
                    requestData.questionthree = questionOne
                }
                
            }
            if arrayOfCells[i].data.label == "Please provide the name of a personal reference" {
                if let questiontwo = arrayOfCells[i].textField.text{
                    requestData.questionfour = questiontwo
                }
                
            }
            
        }
        if let data = requestData.build() {
            print(data)
        }
        
        
    }
    
    @IBAction func submitButtonPressed(_ sender: UIButton) {
        parameterBuilder()
        print("This the submit button")
    }
    
    
}

extension Page3ViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return firstSection.count
    }
    
    
    func tableView(_ tableView: UITableView, didEndEditingRowAt indexPath: IndexPath?) {
        arrayOfCells[(indexPath?.row)!].textField.text = cell.textField.text
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return firstSection[section].elements!.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "fieldelement", for: indexPath) as? ThirdPageTableViewCell
        cell?.data = firstSection[indexPath.section].elements?[indexPath.row]
        cell?.selectionStyle = .none
        arrayOfCells += [cell!]
        cell?.addTapGesture {
            self.view.endEditing(true)
            self.validate()
            
        }
        return cell!
    }
    
    
}
